#CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/home/zks/local/ ../libzks
cmake_minimum_required (VERSION 2.6) 
project(libzks)

set(CONFIG ${CMAKE_BUILD_TYPE})
set( CMAKE_DEBUG_POSTFIX "_d" )

MESSAGE(STATUS "CONFIG : ${CONFIG}")
MESSAGE(STATUS "CMAKE_BUILD_TYPE : ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "CMAKE_STANDARD_LIBRARIES : ${CMAKE_STANDARD_LIBRARIES}")

if((<CXX_COMPILER_ID> STREQUAL <Clang>) OR (<CXX_COMPILER_ID> STREQUAL <GNU>) )
	string(CONCAT CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG} " -g")
	string(CONCAT CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE} " -O2")

	if(<CXX_COMPILER_ID> STREQUAL <Clang>)
		string(CONCAT CMAKE_STANDARD_LIBRARIES ${CMAKE_STANDARD_LIBRARIES} " -lc++")
	endif(<CXX_COMPILER_ID> STREQUAL <Clang>)
endif((<CXX_COMPILER_ID> STREQUAL <Clang>) OR (<CXX_COMPILER_ID> STREQUAL <GNU>) )

string(CONCAT CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG} " -DDEBUG -D_DEBUG")
string(CONCAT CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE} " -DNDEBUG -D_NDEBUG")

MESSAGE(STATUS "CMAKE_CXX_FLAGS_DEBUG : ${CMAKE_CXX_FLAGS_DEBUG}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS_RELEASE : ${CMAKE_CXX_FLAGS_RELEASE}")

set( CMAKE_DEBUG_TARGET_PROPERTIES on )
set( CMAKE_VERBOSE_MAKEFILE on )

add_compile_options ($<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:GNU>>:-std=c++1y>)
add_compile_options ($<$<CXX_COMPILER_ID:Clang>:-stdlib=libc++>)

find_package ( Threads REQUIRED )

add_subdirectory (src)
add_subdirectory (unittest)